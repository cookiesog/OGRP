AddCSLuaFile("cl_init.lua") AddCSLuaFile("shared.lua") include('shared.lua') ENT.health = 150 ENT.Alerted = false ENT.Territorial = true ENT.Bleeds = true ENT.Chasing = true ENT.Flinches = true ENT.FriendlyToPlayer = false ENT.Damage = 25 ENT.BleedsRed = true ENT.MeleeAttacking = false; zmax=0 ENT.alert1 = Sound("zombies/zombie_alert1.mp3") ENT.alert2 = Sound("zombies/zombie_alert2.mp3") ENT.alert3 = Sound("zombies/zombie_alert3.mp3") ENT.alert4 = Sound("zombies/zombie_alert4.mp3") ENT.alert5 = Sound("zombies/zombie_alert5.mp3") ENT.alert6 = Sound("zombies/zombie_alert6.mp3") ENT.alert7 = Sound("zombies/zombie_alert7.mp3") ENT.alert8 = Sound("zombies/zombie_alert8.mp3") ENT.alert9 = Sound("zombies/zombie_alert9.mp3") ENT.idle1 = Sound("zombies/zombie_voice_idle1.mp3") ENT.idle2 = Sound("zombies/zombie_voice_idle2.mp3") ENT.idle3 = Sound("zombies/zombie_voice_idle3.mp3") ENT.idle4 = Sound("zombies/zombie_voice_idle4.mp3") ENT.idle5 = Sound("zombies/zombie_voice_idle5.mp3") ENT.idle6 = Sound("zombies/zombie_voice_idle6.mp3") ENT.idle7 = Sound("zombies/Zombie_voice_idle7.mp3") ENT.idle8 = Sound("zombies/zombie_voice_idle8.mp3") ENT.idle9 = Sound("zombies/Zombie_voice_idle9.mp3") ENT.idle10 = Sound("zombies/zombie_voice_idle10.mp3") ENT.idle11 = Sound("zombies/Zombie_voice_idle11.mp3") ENT.attack1 = Sound("npc/zombie/claw_strike1.wav") ENT.attack2 = Sound("npc/zombie/claw_strike2.wav") ENT.attack3 = Sound("npc/zombie/claw_strike3.wav") ENT.attackmiss1 = Sound("npc/zombie/claw_miss1.wav") ENT.hurt1 = Sound("zombies/zombie_pain.mp3") ENT.hurt2 = Sound("zombies/zombie_pain1.mp3") ENT.hurt3 = Sound("zombies/zombie_pain2.mp3") ENT.hurt4 = Sound("zombies/zombie_pain3.mp3") ENT.hurt5 = Sound("zombies/zombie_pain4.mp3") ENT.hurt6 = Sound("zombies/zombie_pain5.mp3") ENT.hurt7 = Sound("zombies/zombie_pain6.mp3") ENT.hurt8 = Sound("zombies/zombie_pain7.mp3") ENT.die1 = Sound("zombies/zombie_die.mp3") ENT.die2 = Sound("zombies/zombie_die1.mp3") ENT.die3 = Sound("zombies/zombie_die2.mp3") ENT.die4 = Sound("zombies/zombie_die3.mp3") ENT.dead = false function ENT:Initialize() local modelchoice = math.random(1,13) if modelchoice == 2 then self.Model = "models/zombie/zclassic_01.mdl" elseif modelchoice == 3 then self.Model = "models/zombie/zclassic_02.mdl" elseif modelchoice == 4 then self.Model = "models/zombie/zclassic_03.mdl" elseif modelchoice == 5 then self.Model = "models/zombie/zclassic_04.mdl" elseif modelchoice == 6 then self.Model = "models/zombie/zclassic_05.mdl" elseif modelchoice == 7 then self.Model = "models/zombie/zclassic_06.mdl" elseif modelchoice == 8 then self.Model = "models/zombie/zclassic_07.mdl" elseif modelchoice == 9 then self.Model = "models/zombie/zclassic_08.mdl" elseif modelchoice == 10 then self.Model = "models/zombie/zclassic_09.mdl" elseif modelchoice == 11 then self.Model = "models/zombie/zclassic_10.mdl" elseif modelchoice == 12 then self.Model = "models/zombie/zclassic_11.mdl" elseif modelchoice == 13 then self.Model = "models/zombie/zclassic_12.mdl" elseif modelchoice == 1 then self.Model = "models/zombie/classic.mdl" end self:SetModel( self.Model ) self:SetHullType(HULL_MEDIUM) self:SetHullSizeNormal() self:SetSolid(SOLID_BBOX) self:SetMoveType(MOVETYPE_STEP) self:CapabilitiesAdd(CAP_MOVE_GROUND) self:SetMaxYawSpeed(5000) self:SetHealth(self.health) end function ENT:Think() local function setmeleefalse() if self:Health() < 0 then return end self.MeleeAttacking = false self:SetSchedule(SCHED_CHASE_ENEMY) end local function Attack_Melee() if self:Health() < 0 then return end local entstoattack = ents.FindInSphere(self:GetPos() + self:GetForward()*45,47) local hit = false if entstoattack != nil then for _,v in pairs(entstoattack) do if ((v:IsNPC() || (v:IsPlayer() && v:Alive())) && (v != self) && (v:GetClass() != self:GetClass()) || (v:GetClass() == "zwlargefence") or (v:GetClass() == "func_breakable") or (v:GetClass() == "zwsmallfence") or (v:GetClass() == "zwsplank") or (v:GetClass() == "zwlplank")) then v:TakeDamage(self.Damage,self) if v:IsPlayer() then v:ViewPunch(Angle(math.random(-1,1)*self.Damage,math.random(-1,1)*self.Damage,math.random(-1,1)*self.Damage)) v.Finf=true end local props = ents.FindByClass("prop_physics") for _,prop in ipairs(props) do prop:GetPhysicsObject() end hit = true end end end if hit == false then self:EmitSound(self.attackmiss1,70,math.random(80,100)) else local attck = math.random(1,3) if attck == 1 then self:EmitSound(self.attack1,70,math.random(80,110)) elseif attck == 2 then self:EmitSound(self.attack2,70,math.random(80,110)) elseif attck == 3 then self:EmitSound(self.attack3,70,math.random(80,110)) end end timer.Create("melee_done_timer"..self.Entity:EntIndex(),0.8,1,setmeleefalse) end if GetConVarNumber("ai_disabled") == 0 then if math.random(1,5) == 1 then if self:GetEnemy() != nil then self:UpdateEnemyMemory(self:GetEnemy(),self:GetEnemy():GetPos()) end end local deathseed = math.random(300,1) if deathseed == 1 then self:EmitSound(self.idle1,70,math.random(80,100)) elseif deathseed == 2 then self:EmitSound(self.idle2,70,math.random(80,100)) elseif deathseed == 3 then self:EmitSound(self.idle3,70,math.random(80,100)) elseif deathseed == 4 then self:EmitSound(self.idle4,70,math.random(80,100)) elseif deathseed == 5 then self:EmitSound(self.idle5,70,math.random(80,100)) elseif deathseed == 6 then self:EmitSound(self.idle6,70,math.random(80,100)) elseif deathseed == 7 then self:EmitSound(self.idle7,70,math.random(80,100)) elseif deathseed == 8 then self:EmitSound(self.idle8,70,math.random(80,100)) elseif deathseed == 9 then self:EmitSound(self.idle9,70,math.random(80,100)) elseif deathseed == 10 then self:EmitSound(self.idle10,70,math.random(80,100)) elseif deathseed == 11 then self:EmitSound(self.idle11,70,math.random(80,100)) end if self.TakingCover == false then if(math.random(1,6) == 1) then self:FindCloseEnemies() end end if self:GetEnemy() != nil then if (self:GetEnemy():GetPos():Distance(self:GetPos()) < 45) || self:HasPropInFrontOfMe() then if self.MeleeAttacking == false then self:SetSchedule(SCHED_MELEE_ATTACK1) timer.Create("melee_attack_timer"..self.Entity:EntIndex(),1,1,Attack_Melee) self.MeleeAttacking = true; end end else self:FindEnemyDan() self.MeleeAttacking = false end end end function ENT:HasPropInFrontOfMe() local entstoattack = ents.FindInSphere(self:GetPos() + self:GetForward()*75,47) for _,v in pairs(entstoattack) do if v:GetClass() == "zwlargefence" then return true end if v:GetClass() == "func_breakable" then return true end if v:GetClass() == "zwsmallfence" then return true end if v:GetClass() == "zwsplank" then return true end if v:GetClass() == "zwlplank" then return true end end return false end function ENT:SelectSchedule() if self:GetEnemy() != nil then if self:GetEnemy():GetPos():Distance(self:GetPos())>10000 then self:SetSchedule(SCHED_CHASE_ENEMY) self:SetEnemy(NULL) alerted = true end end if self:GetEnemy() != nil then if self:GetEnemy():GetPos():Distance(self:GetPos())<10000 then self:UpdateEnemyMemory(self:GetEnemy(),self:GetEnemy():GetPos()) self:SetSchedule(SCHED_CHASE_ENEMY) self.Chasing = true else self:SetSchedule(SCHED_IDLE_WANDER) end elseif self.Alerted == true then self:SetSchedule(SCHED_CHASE_ENEMY) else self:SetSchedule(SCHED_IDLE_WANDER) end end function ENT:OnTakeDamage(dmg) lastAttacker = dmg if self.Bleeds == true then self:SpawnBlood(dmg) end self:SetHealth(self:Health() - dmg:GetDamage())  local deathsound = math.random(1,8) if deathsound == 1 then self:EmitSound( self.hurt1,70,math.random(80,100)) elseif deathsound == 2 then self:EmitSound( self.hurt2,70,math.random(80,100)) elseif deathsound == 3 then self:EmitSound( self.hurt3,70,math.random(80,100)) elseif deathsound == 4 then self:EmitSound( self.hurt4,70,math.random(80,100)) elseif deathsound == 5 then self:EmitSound( self.hurt5,70,math.random(80,100)) elseif deathsound == 6 then self:EmitSound( self.hurt6,70,math.random(80,100)) elseif deathsound == 7 then self:EmitSound( self.hurt7,70,math.random(80,100)) elseif deathsound == 8 then self:EmitSound( self.hurt7,70,math.random(80,100)) end if dmg:GetAttacker():GetClass() != self:GetClass() && math.random(1,7) == 1 then self:ResetEnemy() self:AddEntityRelationship(dmg:GetAttacker(),1,10) self:SetEnemy(dmg:GetAttacker()) self:SetSchedule(SCHED_CHASE_ENEMY) self.Chasing = true lastAttacker = dmg end if self:Health() <= 0 && self.dead == false then self.dead = true; hook.Call("OnNPCKilled",GAMEMODE,self,lastAttacker:GetAttacker(),lastAttacker:GetInflictor()) self:KilledDan() end end function ENT:FindEnemyDan() local MyNearbyTargets = ents.FindInCone(self:GetPos(),self:GetForward(),4000,45) if (!MyNearbyTargets) then print("No Targets!"); return end for k,v in pairs(MyNearbyTargets) do if v:Disposition(self) == 1 || (v:IsPlayer() && GetConVarNumber("ai_ignoreplayers") == 0) then self:ResetEnemy() self:AddEntityRelationship(v,1,10) self:SetEnemy(v) self:UpdateEnemyMemory(v,v:GetPos()) local distance = self:GetPos():Distance(v:GetPos()) if self.Alerted == false then  local jklm = math.random(1,9) if jklm == 1 then self:EmitSound( self.alert1,70,math.random(80,100)) elseif jklm == 2 then self:EmitSound( self.alert2,70,math.random(80,100)) elseif jklm == 3 then self:EmitSound( self.alert3,70,math.random(80,100)) elseif jklm == 4 then self:EmitSound( self.alert4,70,math.random(80,100)) elseif jklm == 5 then self:EmitSound( self.alert5,70,math.random(80,100)) elseif jklm == 6 then self:EmitSound( self.alert6,70,math.random(80,100)) elseif jklm == 7 then self:EmitSound( self.alert7,70,math.random(80,100)) elseif jklm == 8 then self:EmitSound( self.alert8,70,math.random(80,100)) elseif jklm == 9 then self:EmitSound( self.alert9,70,math.random(80,100)) end end self.Alerted = true return end end end function ENT:ResetEnemy() local enttable = ents.FindByClass("npc_*") local monstertable = ents.FindByClass("monster_*") table.Add(monstertable,enttable) for _,x in pairs(monstertable) do if (!ents) then print("No Entities!"); return end if (x:GetClass() != self:GetClass()) then self:AddEntityRelationship(x,2,10) end end self:AddRelationship("player D_NU 10") end function ENT:FindCloseEnemies() local MyNearbyTargets = ents.FindInCone(self:GetPos(),self:GetForward(),250,45)  if (!MyNearbyTargets) then print("No Targets!"); return end for k,v in pairs(MyNearbyTargets) do if v:Disposition(self) == 1 || v:IsPlayer() then self:ResetEnemy() self:AddEntityRelationship(v,1,10) self:SetEnemy(v) self.Alerted = true return end end end function ENT:OnRemove() timer.Remove("melee_attack_timer"..self.Entity:EntIndex()) timer.Remove("melee_done_timer"..self.Entity:EntIndex()) end function ENT:HasLOS() if self:GetEnemy() != nil then local tracedata = {} tracedata.start = self:GetPos() tracedata.endpos = self:GetEnemy():GetPos() tracedata.filter = self local trace = util.TraceLine(tracedata) if trace.HitWorld == false then return true else return false end end return false end function ENT:SpawnBlood(dmg) if (self.Bleeds == true) then local bloodeffect = ents.Create("info_particle_system") if self.BleedsRed == true then bloodeffect:SetKeyValue("effect_name","blood_impact_red_01") end bloodeffect:SetPos(dmg:GetDamagePosition()) bloodeffect:Spawn() bloodeffect:Activate() bloodeffect:Fire("Start","",0) bloodeffect:Fire("Kill","",0.1) end end function ENT:KilledDan() zmax= zmax - 1 local deathsound = math.random(1,4) if deathsound == 1 then self:EmitSound( self.die1,70,math.random(80,100)) elseif deathsound == 2 then self:EmitSound( self.die2,70,math.random(80,100)) elseif deathsound == 3 then self:EmitSound( self.die3,70,math.random(80,100)) elseif deathsound == 4 then self:EmitSound( self.die4,70,math.random(80,100)) end local ent = ents.Create("zombinv") ent:SetPos(self:GetPos()+Vector(0,0,2)) ent:SetAngles(Angle(-90,0,0)) ent:Spawn() ent:DrawShadow(false) timer.Simple(40,function()if ent==NULL then else ent:Remove()end end) local ragdoll = ents.Create("prop_ragdoll") ragdoll:SetModel(self:GetModel()) ragdoll:SetPos(self:GetPos()) ragdoll:SetAngles(self:GetAngles()) ragdoll:Spawn() ragdoll:SetSkin(self:GetSkin()) ragdoll:SetColor(self:GetColor()) ragdoll:SetMaterial(self:GetMaterial()) timer.Simple(2,function() if ragdoll==NULL then else  local bones = ragdoll:GetPhysicsObjectCount() if ( bones < 2 ) then return end if ( ragdoll.StatueInfo ) then return end  ragdoll.StatueInfo = {}  undo.Create( "Statue" )  for bone = 1, bones-1 do  local constraint = constraint.Weld( ragdoll, ragdoll, 0, bone, forcelimit )  if ( constraint ) then  ragdoll.StatueInfo[bone] = constraint  undo.AddEntity( constraint )  end   end ragdoll:SetSolid(SOLID_NONE) ragdoll:GetPhysicsObject():EnableMotion(false) end end)  undo.ReplaceEntity(self,ragdoll) cleanup.ReplaceEntity(self,ragdoll) if self:IsOnFire() then ragdoll:Ignite(math.Rand(8,10),0) ragdoll:SetMaterial("models/props_foliage/tree_deciduous_01a_trunk") ragdoll:SetColor(Color(90,90,90)) end for i=1,128 do local bone = ragdoll:GetPhysicsObjectNum(i) if IsValid(bone) then local bonepos,boneang = self:GetBonePosition(ragdoll:TranslatePhysBoneToBone(i)) bone:SetPos(bonepos) end end if(GetConVarNumber("ai_keepragdolls") == 0) then ragdoll:SetCollisionGroup(1) ragdoll:Fire("FadeAndRemove","",40) end self:Remove() end